
# Use postgres/example user/password credentials
version: '3.1'

services:
  db1:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: dpsa
    ports:
      - 9901:5432

  db1-init:
    build:
      context: ./config/postgres-init
      dockerfile: Dockerfile
      args:
        DATABASE_URL: postgres://admin:password@db1:5432/dpsa
    volumes:
      - type: bind
        source: ./janus/db
        target: /sqlx-initdb.d
    depends_on:
      - db1
    restart: "no"

  db2:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: dpsa
    ports:
      - 9902:5432

  db2-init:
    build:
      context: ./config/postgres-init
      dockerfile: Dockerfile
      args:
        DATABASE_URL: postgres://admin:password@db2:5432/dpsa
    volumes:
      - type: bind
        source: ./janus/db
        target: /sqlx-initdb.d
    depends_on:
      - db2
    restart: "no"

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

  # #################################################################
  # # aggregator server 1 (leader)

  aggregator1:
    # build:
    #   context: ./janus
    #   dockerfile: Dockerfile
    #   args:
    #     BINARY: aggregator
    #     FEATURES: fpvec_bounded_l2
    image: janus_aggregator
    environment:
      - RUST_LOG=info
    volumes:
      - type: bind
        source: ./config/leader
        target: /data
    ports:
      - 9991:9991
      - 6669:6669
    depends_on:
      db1-init:
        condition: service_completed_successfully
    command: --config-file data/aggregator-config.yml --datastore-keys vWoEFA7F+ojcF+HohGLn/Q

  dpsa4fl-janus-manager1:
    image: janus_manager
    # build:
    #   context: ./dpsa4fl
    #   dockerfile: Dockerfile
    volumes:
      - type: bind
        source: ./config/leader
        target: /data
    ports:
      - 9981:9991
    depends_on:
      db1-init:
        condition: service_completed_successfully
    command: --config-file data/dpsa4fl-janus-manager-config.yml --datastore-keys vWoEFA7F+ojcF+HohGLn/Q

  janus_server_collect_jd1:
    image: janus_collection_job_driver
    # build:
    #   context: ./janus
    #   dockerfile: Dockerfile
    #   args:
    #     BINARY: collection_job_driver
    #     FEATURES: fpvec_bounded_l2
    volumes:
      - type: bind
        source: ./config/leader
        target: /data
    depends_on:
      db1-init:
        condition: service_completed_successfully
    command: --config-file data/job-driver-config.yml --datastore-keys vWoEFA7F+ojcF+HohGLn/Q

  janus_server_aggregation_jd1:
    image: janus_aggregation_job_driver
    # build:
    #   context: ./janus
    #   dockerfile: Dockerfile
    #   args:
    #     BINARY: aggregation_job_driver
    #     FEATURES: fpvec_bounded_l2
    environment:
      - RUST_LOG=info
    volumes:
      - type: bind
        source: ./config/leader
        target: /data
    depends_on:
      db1-init:
        condition: service_completed_successfully
    command: --config-file data/job-driver-config.yml --datastore-keys vWoEFA7F+ojcF+HohGLn/Q

  janus_server_aggregation_jc1:
    image: janus_aggregation_job_creator
    # build:
    #   context: ./janus
    #   dockerfile: Dockerfile
    #   args:
    #     BINARY: aggregation_job_creator
    #     FEATURES: fpvec_bounded_l2
    volumes:
      - type: bind
        source: ./config/leader
        target: /data
    depends_on:
      db1-init:
        condition: service_completed_successfully
    command: --config-file data/job-creator-config.yml --datastore-keys vWoEFA7F+ojcF+HohGLn/Q

  # #################################################################
  # # aggregator server 2
  aggregator2:
    image: janus_aggregator
    # build:
    #   context: ./janus
    #   dockerfile: Dockerfile
    #   args:
    #     BINARY: aggregator
    #     FEATURES: fpvec_bounded_l2
    volumes:
      - type: bind
        source: ./config/helper
        target: /data
    ports:
      - 9992:9992
    depends_on:
      db2-init:
        condition: service_completed_successfully
    command: --config-file data/aggregator-config.yml --datastore-keys vWoEFA7F+ojcF+HohGLn/Q

  janus-manager2:
    image: janus_manager
    # build:
    #   context: ./dpsa4fl
    #   dockerfile: Dockerfile

    volumes:
      - type: bind
        source: ./config/helper
        target: /data
    ports:
      - 9982:9992
    depends_on:
      db2-init:
        condition: service_completed_successfully
    command: --config-file data/dpsa4fl-janus-manager-config.yml --datastore-keys vWoEFA7F+ojcF+HohGLn/Q


