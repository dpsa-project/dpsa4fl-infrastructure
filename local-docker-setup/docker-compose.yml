
# Use postgres/example user/password credentials
version: '3.1'

services:
  db1:
    image: postgres
    volumes:
      - type: bind
        source: ./config/postgres
        target: /docker-entrypoint-initdb.d
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: dpsa
    ports:
      - 9901:5432

  db2:
    image: postgres
    volumes:
      - type: bind
        source: ./config/postgres
        target: /docker-entrypoint-initdb.d
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: dpsa
    ports:
      - 9902:5432

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

  # #################################################################
  # # aggregator server 1 (leader)
  # aggregator1:
  #   image: mxmurw/janus_server_aggregator:latest
  #   environment:
  #     - RUST_LOG=info
  #   volumes:
  #     - type: bind
  #       source: ./config/leader
  #       target: /data
  #   ports:
  #     - 9991:9991
  #     - 6669:6669

  aggregator1:
    build:
      context: ./janus
      dockerfile: Dockerfile
      args:
        BINARY: aggregator
        CONFIG: data/aggregator-config.yml
    environment:
      - RUST_LOG=info
    volumes:
      - type: bind
        source: ./config/leader
        target: /data
    ports:
      - 9991:9991
      - 6669:6669

  dpsa4fl-janus-manager1:
    build:
      context: ./dpsa4fl
      dockerfile: Dockerfile
      args:
        CONFIG: data/dpsa4fl-janus-manager-config.yml

    volumes:
      - type: bind
        source: ./config/leader
        target: /data

    ports:
      - 9981:9991

  janus_server_collect_jd1:
    # image: mxmurw/janus_server_collect_jd:latest
    build:
      context: ./janus
      dockerfile: Dockerfile
      args:
        BINARY: collection_job_driver
        CONFIG: data/job-driver-config.yml
    volumes:
      - type: bind
        source: ./config/leader
        target: /data

  janus_server_aggregation_jd1:
    # image: mxmurw/janus_server_aggregation_jd:latest
    build:
      context: ./janus
      dockerfile: Dockerfile
      args:
        BINARY: aggregation_job_driver
        CONFIG: data/job-driver-config.yml
    environment:
      - RUST_LOG=info
    volumes:
      - type: bind
        source: ./config/leader
        target: /data

  janus_server_aggregation_jc1:
    # image: mxmurw/janus_server_aggregation_jc:latest
    build:
      context: ./janus
      dockerfile: Dockerfile
      args:
        BINARY: aggregation_job_creator
        CONFIG: data/job-creator-config.yml
    volumes:
      - type: bind
        source: ./config/leader
        target: /data

  # #################################################################
  # # aggregator server 2
  aggregator2:
    # image: mxmurw/janus_server_aggregator:latest
    build:
      context: ./janus
      dockerfile: Dockerfile
      args:
        BINARY: aggregator
        CONFIG: data/aggregator-config.yml
    volumes:
      - type: bind
        source: ./config/helper
        target: /data
    ports:
      - 9992:9992

  janus-manager2:
    # image: mxmurw/janus_server_janus-manager:latest
    build:
      context: ./dpsa4fl
      dockerfile: Dockerfile
      args:
        CONFIG: data/dpsa4fl-janus-manager-config.yml

    volumes:
      - type: bind
        source: ./config/helper
        target: /data
    ports:
      - 9982:9992


